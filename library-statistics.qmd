---
title: "Bibliothek MPI"
author: "Thomas Gerdes"
date: "2025-08-15"
format:
  html:
    theme: cosmo
    toc: true
    toc-float: true
    code-fold: true
    interactive: true
    embed-resources: true
    page-layout: full
    include-in-header:
      - text: |
          <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
---

## Einleitung

Diese Seite zeigt die Erwerbungen von Print-BÃ¼chern der Institutsbibliothek in den Jahren 2000-2024. Sie bietet zudem einen Ãœberblick Ã¼ber die inhaltliche Zusammensetzung des aktuellen Print-Bestands.

---

## Erwerbung (Print-BÃ¼cher)

```{=html}
<style>
.quarto-container {
Â  max-width: 1400px !important;
}
body {
Â  margin: 0 20px;
}
.info-box-container {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 10px;
}
.info-box {
  background: #f8f9fa;
  padding: 12px;
  border-radius: 6px;
  text-align: center;
flex: 1 1 200px;
min-width: 200px;
max-width: 250px;
}
/* FÃ¼r Tablets und kleinere Bildschirme */
@media (max-width: 768px) {
  .info-box {
    flex: 1 1 calc(50% - 5px);
    min-width: calc(50% - 5px);
    max-width: calc(50% - 5px);
  }
}

/* FÃ¼r sehr kleine Bildschirme (Smartphones) */
@media (max-width: 480px) {
  .info-box {
    flex: 1 1 100%;
    min-width: 100%;
    max-width: 100%;
  }
}
.info-box-value {
  font-size: 20px;
  font-weight: bold;
}
.info-box-label {
  font-size: 12px;
  color: #666;
  margin-top: 3px;
}
/* Spezifische Stile fÃ¼r die Boxen */
.info-box.blue { border-left: 3px solid #007bff; }
.info-box.blue .info-box-value { color: #007bff; }
.info-box.gray { border-left: 3px solid #6c757d; }
.info-box.gray .info-box-value { color: #6c757d; }
.info-box.green { border-left: 3px solid #28a745; }
.info-box.green .info-box-value { color: #28a745; }
.info-box.red { border-left: 3px solid #dc3545; }
.info-box.red .info-box-value { color: #dc3545; }
</style>

<div style="background: white; padding: 20px; margin: 30px 0;" data-q-loc="body">
Â Â 
Â  <h1 style="color: #333; text-align: center; margin: 10px 0 5px 0; font-size: 24px;">Zuwachs Bestand 2000-2024</h1>
Â Â 
Â  <div class="info-box-container" style="margin: 15px 0;">
Â  Â  <div class="info-box blue">
Â  Â  Â  <div class="info-box-value" id="totalAcquisitions">-</div>
Â  Â  Â  <div class="info-box-label">Gesamterwerbungen</div>
Â  Â  </div>
Â  Â  <div class="info-box blue">
Â  Â  Â  <div class="info-box-value" id="avgPerYear">-</div>
Â  Â  Â  <div class="info-box-label">Durchschnitt/Jahr</div>
Â  Â  </div>
Â  Â  <div class="info-box blue">
Â  Â  Â  <div class="info-box-value" id="maxValue">-</div>
Â  Â  Â  <div class="info-box-label">HÃ¶chstwert</div>
Â  Â  </div>
Â  </div>

Â  <div style="position: relative; height: 600px; margin: 10px 0;">
Â  Â  <canvas id="acquisitionsChart"></canvas>
Â  </div>
Â Â 
Â  <div class="info-box-container" style="margin: 20px 0;">
Â  Â  <div class="info-box gray">
Â  Â  Â  <div class="info-box-value" id="phase1Avg">-</div>
Â  Â  Â  <div class="info-box-label">âŒ€ Phase 1 (2000-2007)</div>
Â  Â  </div>
Â  Â  <div class="info-box green">
Â  Â  Â  <div class="info-box-value" id="phase2Avg">-</div>
Â  Â  Â  <div class="info-box-label">âŒ€ Phase 2 (2008-2020)</div>
Â  Â  </div>
Â  Â  <div class="info-box red">
Â  Â  Â  <div class="info-box-value" id="phase3Avg">-</div>
Â  Â  Â  <div class="info-box-label">âŒ€ Phase 3 (2021-2024)</div>
Â  Â  </div>
Â  </div>

Â  <div style="margin: 15px 0; display: flex; gap: 8px; justify-content: center;">
Â  Â  <button onclick="downloadChart1()" style="padding: 6px 12px; border: none; border-radius: 4px; background: #28a745; color: white; cursor: pointer; font-size: 12px;">PNG Download</button>
Â  </div>
</div>

<details id="details1">
<summary>ðŸ“Š Detaildaten zur Erwerbungsentwicklung (Print)</summary>
<div class="details-content">
</div>
</details>

<div style="height: 80px;"></div>

---

## Bestandsverteilung nach Fachgebieten (Print-BÃ¼cher)

<div style="background: white; padding: 20px; margin: 30px 0;" data-q-loc="body">
Â Â 
Â  <h1 style="color: #333; text-align: center; margin: 10px 0 5px 0; font-size: 24px;">Bestand Bibliothek 2025</h1>
Â Â 
Â  <div style="display: flex; justify-content: center; margin: 15px 0;">
Â  Â  <div class="info-box blue" style="flex: none;">
Â  Â  Â  <div class="info-box-value" id="totalBooks">-</div>
Â  Â  Â  <div class="info-box-label">Print-BÃ¼cher (gesamt)</div>
Â  Â  </div>
Â  </div>

Â  <div style="margin: 15px 0; display: flex; gap: 8px; justify-content: center;">
Â  Â  <button id="pieBtn2" onclick="changeChartType2('pie')" style="padding: 6px 12px; border: none; border-radius: 4px; background: #28a745; color: white; cursor: pointer; font-size: 12px;">Kreisdiagramm</button>
Â  Â  <button id="barBtn2" onclick="changeChartType2('bar')" style="padding: 6px 12px; border: none; border-radius: 4px; background: #007bff; color: white; cursor: pointer; font-size: 12px;">Balkendiagramm</button>
Â  Â  <button onclick="downloadChart2()" style="padding: 6px 12px; border: none; border-radius: 4px; background: #28a745; color: white; cursor: pointer; font-size: 12px;">PNG Download</button>
Â  </div>

Â  <div style="position: relative; height: 700px; margin: 10px 0;">
Â  Â  <canvas id="subjectChart"></canvas>
Â  </div>
</div>

<details id="details2">
<summary>ðŸ“‹ Detaillierte BestandsaufschlÃ¼sselung (Print)</summary>
<div class="details-content">
</div>
</details>

<div style="height: 80px;"></div>

---

## Gesamtbestand (Print)

<div style="background: white; padding: 20px; margin: 30px 0;" data-q-loc="body">
Â Â 
Â  <h1 style="color: #333; text-align: center; margin: 10px 0 5px 0; font-size: 24px;">Gesamtbestand Bibliothek 2025</h1>
Â  <p style="text-align: center; color: #666; margin: 0 0 20px 0; font-size: 14px;">Aufteilung nach Medientypen</p>
Â Â 
Â  <div style="display: flex; justify-content: center; margin: 15px 0;">
Â  Â  <div class="info-box blue" style="flex: none;">
Â  Â  Â  <div class="info-box-value" id="totalCollection">-</div>
Â  Â  Â  <div class="info-box-label">Gesamtbestand</div>
Â  Â  </div>
Â  </div>

Â  <div style="margin: 15px 0; display: flex; gap: 8px; justify-content: center;">
Â  Â  <button id="pieBtn3" onclick="changeChartType3('pie')" style="padding: 6px 12px; border: none; border-radius: 4px; background: #28a745; color: white; cursor: pointer; font-size: 12px;">Kreisdiagramm</button>
Â  Â  <button id="barBtn3" onclick="changeChartType3('bar')" style="padding: 6px 12px; border: none; border-radius: 4px; background: #007bff; color: white; cursor: pointer; font-size: 12px;">Balkendiagramm</button>
Â  Â  <button onclick="downloadChart3()" style="padding: 6px 12px; border: none; border-radius: 4px; background: #28a745; color: white; cursor: pointer; font-size: 12px;">PNG Download</button>
Â  </div>

Â  <div style="position: relative; height: 500px; margin: 10px 0;">
Â  Â  <canvas id="totalCollectionChart"></canvas>
Â  </div>
</div>

<details id="details3">
<summary>ðŸ“Š Detaillierte BestandsaufschlÃ¼sselung</summary>
<div class="details-content">
</div>
</details>

<div style="height: 120px;"></div>

<script>
// ===== MASTER DATA SOURCE (fÃ¼r die gesamte Seite) =====
const ACQUISITION_DATA = [
Â  { year: 2000, value: 328 }, { year: 2001, value: 381 }, { year: 2002, value: 296 },
Â  { year: 2003, value: 207 }, { year: 2004, value: 433 }, { year: 2005, value: 354 },
Â  { year: 2006, value: 222 }, { year: 2007, value: 504 }, { year: 2008, value: 2106 },
Â  { year: 2009, value: 3114 }, { year: 2010, value: 3742 }, { year: 2011, value: 3568 },
Â  { year: 2012, value: 1880 }, { year: 2013, value: 2655 }, { year: 2014, value: 2802 },
Â  { year: 2015, value: 2580 }, { year: 2016, value: 2928 }, { year: 2017, value: 3042 },
Â  { year: 2018, value: 3811 }, { year: 2019, value: 2471 }, { year: 2020, value: 2153 },
Â  { year: 2021, value: 674 }, { year: 2022, value: 176 }, { year: 2023, value: 189 }, { year: 2024, value: 209 }
];

const SUBJECT_DATA = [
Â  { signature: 'LA-LC', name: 'Sozial- und Kulturanthropologie', count: 22812 },
Â  { signature: 'MN-MS', name: 'Soziologie', count: 5114 },
Â  { signature: 'B', name: 'Religion', count: 4764 },
Â  { signature: 'C', name: 'Philosophie', count: 3463 },
Â  { signature: 'MA-ML', name: 'Politologie', count: 2453 },
Â  { signature: 'N', name: 'Geschichte', count: 2328 },
Â  { signature: 'R', name: 'Geografie', count: 1902 },
Â  { signature: 'P', name: 'Recht', count: 1873 },
Â  { signature: 'Ref', name: 'Referenz', count: 1844 },
Â  { signature: 'A', name: 'Allgemeines', count: 538 },
Â  { signature: 'Q', name: 'Wirtschaftswissenschaften', count: 471 },
Â  { signature: 'E', name: 'Allgemeine Sprachwissenschaft', count: 222 },
Â  { signature: 'G', name: 'Germanistik', count: 98 },
Â  { signature: 'LD-LZ', name: 'ArchÃ¤ologie, Musik und Kunst', count: 82 },
Â  { signature: 'H', name: 'Anglistik', count: 79 },
Â  { signature: 'I', name: 'Romanistik', count: 37 },
Â  { signature: 'F', name: 'Klassische Philologie', count: 23 },
Â  { signature: 'D', name: 'PÃ¤dagogik', count: 22 },
Â  { signature: 'Z', name: 'Sonstiges', count: 18 },
Â  { signature: 'W', name: 'Biologie', count: 10 },
Â  { signature: 'MT-MZ', name: 'Gesundheit und MilitÃ¤r', count: 4 }
];

const OTHER_MEDIA_DATA = [
Â  { name: 'Gebundene ZeitschriftenbÃ¤nde', count: 3561 }
];

// ===== BERECHNETE WERTE =====
const TOTAL_BOOKS = SUBJECT_DATA.reduce((sum, item) => sum + item.count, 0);
const TOTAL_ACQUISITIONS = ACQUISITION_DATA.reduce((sum, item) => sum + item.value, 0);
const TOTAL_COLLECTION = TOTAL_BOOKS + OTHER_MEDIA_DATA.reduce((sum, item) => sum + item.count, 0);

const PHASE1_DATA = ACQUISITION_DATA.filter(d => d.year >= 2000 && d.year <= 2007);
const PHASE2_DATA = ACQUISITION_DATA.filter(d => d.year >= 2008 && d.year <= 2020);
const PHASE3_DATA = ACQUISITION_DATA.filter(d => d.year >= 2021 && d.year <= 2024);

const PHASE1_AVG = Math.round(PHASE1_DATA.reduce((sum, d) => sum + d.value, 0) / PHASE1_DATA.length);
const PHASE2_AVG = Math.round(PHASE2_DATA.reduce((sum, d) => sum + d.value, 0) / PHASE2_DATA.length);
const PHASE3_AVG = Math.round(PHASE3_DATA.reduce((sum, d) => sum + d.value, 0) / PHASE3_DATA.length);

const AVG_PER_YEAR = Math.round(TOTAL_ACQUISITIONS / ACQUISITION_DATA.length);
const MAX_VALUE = Math.max(...ACQUISITION_DATA.map(d => d.value));

console.log('ðŸ“Š Daten geladen:');
console.log('ðŸ“š BÃ¼cher (Print):', TOTAL_BOOKS.toLocaleString('de-DE'));
console.log('ðŸ“– Gesamtbestand:', TOTAL_COLLECTION.toLocaleString('de-DE'));

// ===== FUNKTIONEN =====

// --- Erwerbung (Chart 1) ---
let chart1;
function initChart1() {
Â  const ctx = document.getElementById('acquisitionsChart').getContext('2d');
Â Â 
Â  if (chart1) { chart1.destroy(); }

Â  const config = {
Â  Â  type: 'line',
Â  Â  data: {
Â  Â  Â  labels: ACQUISITION_DATA.map(d => d.year),
Â  Â  Â  datasets: [
Â  Â  Â  Â  {
Â  Â  Â  Â  Â  label: 'MPI Geschichte (2000-2007): saturierte Bibliothek',
Â  Â  Â  Â  Â  data: ACQUISITION_DATA.map(d => PHASE1_DATA.find(p => p.year === d.year)?.value || null),
Â  Â  Â  Â  Â  borderColor: '#6c757d',
Â  Â  Â  Â  Â  backgroundColor: '#6c757d',
Â  Â  Â  Â  Â  borderWidth: 2,
Â  Â  Â  Â  Â  pointRadius: 3,
Â  Â  Â  Â  Â  spanGaps: false
Â  Â  Â  Â  },
Â  Â  Â  Â  {
Â  Â  Â  Â  Â  label: 'MPI Diversity (2008-2020): Bibliothek im Aufbau',
Â  Â  Â  Â  Â  data: ACQUISITION_DATA.map(d => PHASE2_DATA.find(p => p.year === d.year)?.value || null),
Â  Â  Â  Â  Â  borderColor: '#28a745',
Â  Â  Â  Â  Â  backgroundColor: '#28a745',
Â  Â  Â  Â  Â  borderWidth: 2,
Â  Â  Â  Â  Â  pointRadius: 3,
Â  Â  Â  Â  Â  spanGaps: false
Â  Â  Â  Â  },
Â  Â  Â  Â  {
Â  Â  Â  Â  Â  label: 'MPI Diversity (2021-2024): saturiert & nur 1 Abteilung',
Â  Â  Â  Â  Â  data: ACQUISITION_DATA.map(d => PHASE3_DATA.find(p => p.year === d.year)?.value || null),
Â  Â  Â  Â  Â  borderColor: '#dc3545',
Â  Â  Â  Â  Â  backgroundColor: '#dc3545',
Â  Â  Â  Â  Â  borderWidth: 2,
Â  Â  Â  Â  Â  pointRadius: 3,
Â  Â  Â  Â  Â  spanGaps: false
Â  Â  Â  Â  }
Â  Â  Â  ]
Â  Â  },
Â  Â  options: {
Â  Â  Â  responsive: true,
Â  Â  Â  maintainAspectRatio: false,
Â  Â  Â  scales: {
Â  Â  Â  Â  x: { title: { display: true, text: 'Jahr', font: { size: 12 } }, ticks: { font: { size: 10 } } },
Â  Â  Â  Â  y: { title: { display: true, text: 'Anzahl Erwerbungen', font: { size: 12 } }, beginAtZero: true, ticks: { font: { size: 10 } } }
Â  Â  Â  },
Â  Â  Â  plugins: { legend: { display: true, position: 'bottom', labels: { boxWidth: 15, padding: 10, font: { size: 10 }, usePointStyle: true } } },
Â  Â  Â  interaction: { intersect: false, mode: 'index' }
Â  Â  }
Â  };
Â  chart1 = new Chart(ctx, config);
}

function updateAcquisitionStats() {
Â  document.getElementById('totalAcquisitions').textContent = TOTAL_ACQUISITIONS.toLocaleString('de-DE');
Â  document.getElementById('avgPerYear').textContent = AVG_PER_YEAR.toLocaleString('de-DE');
Â  document.getElementById('maxValue').textContent = MAX_VALUE.toLocaleString('de-DE');
Â  document.getElementById('phase1Avg').textContent = PHASE1_AVG.toLocaleString('de-DE');
Â  document.getElementById('phase2Avg').textContent = PHASE2_AVG.toLocaleString('de-DE');
Â  document.getElementById('phase3Avg').textContent = PHASE3_AVG.toLocaleString('de-DE');
}

function downloadChart1() {
Â  const link = document.createElement('a');
Â  link.download = 'erwerbungen_2000-2024.png';
Â  link.href = chart1.toBase64Image();
Â  link.click();
}

// --- Bestandsverteilung (Chart 2) ---
let chart2;
let currentChartType2 = 'pie';

const colors = [
Â  '#007bff', '#28a745', '#dc3545', '#ffc107', '#17a2b8', 
Â  '#6f42c1', '#fd7e14', '#20c997', '#6c757d', '#e83e8c',
Â  '#007bff80', '#28a74580', '#dc354580', '#ffc10780', '#17a2b880',
Â  '#6f42c180', '#fd7e1480', '#20c99780', '#007bff40', '#28a74540', '#dc354540'
];

function initChart2(type = 'pie') {
Â  const ctx = document.getElementById('subjectChart').getContext('2d');
Â Â 
Â  if (chart2) { chart2.destroy(); }

Â  currentChartType2 = type;
Â  updateActiveButton2();

Â  const sortedData = [...SUBJECT_DATA].sort((a, b) => b.count - a.count);
Â  const indexMapping = {};
Â  SUBJECT_DATA.forEach((item, index) => {
Â  Â  indexMapping[`${item.signature}-${item.name}`] = index;
Â  });
Â  const colorsToUse = sortedData.map(item => {
Â  Â  const originalIndex = indexMapping[`${item.signature}-${item.name}`];
Â  Â  return colors[originalIndex];
Â  });

Â  const config = {
Â  Â  type: type,
Â  Â  data: {
Â  Â  Â  labels: sortedData.map(d => `${d.signature} - ${d.name}`),
Â  Â  Â  datasets: [{
Â  Â  Â  Â  label: 'Anzahl BÃ¼cher',
Â  Â  Â  Â  data: sortedData.map(d => d.count),
Â  Â  Â  Â  backgroundColor: colorsToUse,
Â  Â  Â  Â  borderColor: colorsToUse.map(color => color.replace('80', '').replace('40', '')),
Â  Â  Â  Â  borderWidth: 1
Â  Â  Â  }]
Â  Â  },
Â  Â  options: {
Â  Â  Â  responsive: true,
Â  Â  Â  maintainAspectRatio: false,
Â  Â  Â  layout: { padding: { bottom: type === 'bar' ? 60 : 20, left: 10, right: 10, top: 10 } },
Â  Â  Â  plugins: {
Â  Â  Â  Â  legend: {
Â  Â  Â  Â  Â  display: type === 'pie',
Â  Â  Â  Â  Â  position: 'bottom',
Â  Â  Â  Â  Â  labels: { boxWidth: 12, padding: 8, font: { size: 9 }, usePointStyle: true }
Â  Â  Â  Â  },
Â  Â  Â  Â  tooltip: {
Â  Â  Â  Â  Â  callbacks: {
Â  Â  Â  Â  Â  Â  title: context => null,
Â  Â  Â  Â  Â  Â  label: context => {
Â  Â  Â  Â  Â  Â  Â  const count = type === 'bar' ? context.parsed.y : context.parsed;
Â  Â  Â  Â  Â  Â  Â  const percentage = ((count / TOTAL_BOOKS) * 100).toFixed(1);
Â  Â  Â  Â  Â  Â  Â  const item = sortedData[context.dataIndex];
Â  Â  Â  Â  Â  Â  Â  return `${item.signature} - ${item.name}: ${count.toLocaleString('de-DE')} (${percentage}%)`;
Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  Â  }
Â  Â  Â  Â  }
Â  Â  Â  },
Â  Â  Â  scales: type === 'bar' ? {
Â  Â  Â  Â  x: {
Â  Â  Â  Â  Â  title: { display: true, text: 'Signaturgruppe', font: { size: 12 } },
Â  Â  Â  Â  Â  ticks: {
Â  Â  Â  Â  Â  Â  maxRotation: 45,
Â  Â  Â  Â  Â  Â  minRotation: 45,
Â  Â  Â  Â  Â  Â  font: { size: 8 },
Â  Â  Â  Â  Â  Â  callback: (value, index) => {
Â  Â  Â  Â  Â  Â  Â  const item = sortedData[index];
Â  Â  Â  Â  Â  Â  Â  if (item) { const label = `${item.signature} - ${item.name}`; return label.length > 25 ? label.substr(0, 22) + '...' : label; }
Â  Â  Â  Â  Â  Â  Â  return value;
Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  Â  }
Â  Â  Â  Â  },
Â  Â  Â  Â  y: { title: { display: true, text: 'Anzahl BÃ¼cher', font: { size: 12 } }, beginAtZero: true, ticks: { font: { size: 10 } } }
Â  Â  Â  } : {}
Â  Â  }
Â  };
Â  chart2 = new Chart(ctx, config);
}

function changeChartType2(type) { initChart2(type); }
function updateActiveButton2() {
Â  document.getElementById('pieBtn2').style.background = currentChartType2 === 'pie' ? '#28a745' : '#007bff';
Â  document.getElementById('barBtn2').style.background = currentChartType2 === 'bar' ? '#28a745' : '#007bff';
}
function downloadChart2() {
Â  const link = document.createElement('a');
Â  link.download = 'bestand_sachgruppen_2025.png';
Â  link.href = chart2.toBase64Image();
Â  link.click();
}
function updateSubjectStats() {
Â  document.getElementById('totalBooks').textContent = TOTAL_BOOKS.toLocaleString('de-DE');
}

// --- Gesamtbestand (Chart 3) ---
let chart3;
let currentChartType3 = 'pie';

const collectionColors = ['#007bff', '#28a745'];
const collectionData = [{ name: 'BÃ¼cher', count: TOTAL_BOOKS }, ...OTHER_MEDIA_DATA];

function initChart3(type = 'pie') {
Â  const ctx = document.getElementById('totalCollectionChart').getContext('2d');
Â Â 
Â  if (chart3) { chart3.destroy(); }

Â  currentChartType3 = type;
Â  updateActiveButton3();

Â  const config = {
Â  Â  type: type,
Â  Â  data: {
Â  Â  Â  labels: collectionData.map(d => d.name),
Â  Â  Â  datasets: [{
Â  Â  Â  Â  label: 'Anzahl Medien',
Â  Â  Â  Â  data: collectionData.map(d => d.count),
Â  Â  Â  Â  backgroundColor: collectionColors,
Â  Â  Â  Â  borderColor: collectionColors,
Â  Â  Â  Â  borderWidth: 1
Â  Â  Â  }]
Â  Â  },
Â  Â  options: {
Â  Â  Â  responsive: true,
Â  Â  Â  maintainAspectRatio: false,
Â  Â  Â  layout: { padding: { bottom: type === 'bar' ? 40 : 20, left: 10, right: 10, top: 10 } },
Â  Â  Â  plugins: {
Â  Â  Â  Â  legend: {
Â  Â  Â  Â  Â  display: type === 'pie',
Â  Â  Â  Â  Â  position: 'bottom',
Â  Â  Â  Â  Â  labels: { boxWidth: 15, padding: 15, font: { size: 12 }, usePointStyle: true }
Â  Â  Â  Â  },
Â  Â  Â  Â  tooltip: {
Â  Â  Â  Â  Â  callbacks: {
Â  Â  Â  Â  Â  Â  title: context => null,
Â  Â  Â  Â  Â  Â  label: context => {
Â  Â  Â  Â  Â  Â  Â  const count = type === 'bar' ? context.parsed.y : context.parsed;
Â  Â  Â  Â  Â  Â  Â  const percentage = ((count / TOTAL_COLLECTION) * 100).toFixed(1);
Â  Â  Â  Â  Â  Â  Â  const item = collectionData[context.dataIndex];
Â  Â  Â  Â  Â  Â  Â  return `${item.name}: ${count.toLocaleString('de-DE')} (${percentage}%)`;
Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  Â  }
Â  Â  Â  Â  }
Â  Â  Â  },
Â  Â  Â  scales: type === 'bar' ? {
Â  Â  Â  Â  x: { title: { display: true, text: 'Medientyp', font: { size: 12 } }, ticks: { font: { size: 11 } } },
Â  Â  Â  Â  y: { title: { display: true, text: 'Anzahl Medien', font: { size: 12 } }, beginAtZero: true, ticks: { font: { size: 10 } } }
Â  Â  Â  } : {}
Â  Â  }
Â  };
Â  chart3 = new Chart(ctx, config);
}

function changeChartType3(type) { initChart3(type); }
function updateActiveButton3() {
Â  document.getElementById('pieBtn3').style.background = currentChartType3 === 'pie' ? '#28a745' : '#007bff';
Â  document.getElementById('barBtn3').style.background = currentChartType3 === 'bar' ? '#28a745' : '#007bff';
}
function downloadChart3() {
Â  const link = document.createElement('a');
Â  link.download = 'gesamtbestand_2025.png';
Â  link.href = chart3.toBase64Image();
Â  link.click();
}
function updateCollectionStats() {
Â  document.getElementById('totalCollection').textContent = TOTAL_COLLECTION.toLocaleString('de-DE');
}

// --- FUNKTIONEN ZUR TABELLENERSTELLUNG ---

function generateTable1() {
  const data = ACQUISITION_DATA.map(d => `<tr><td>${d.year}</td><td>${d.value.toLocaleString('de-DE')}</td></tr>`).join('');
  return `
    <table class="table table-striped table-hover" data-quarto-disable-processing="true">
      <thead>
        <tr><th>Jahr</th><th>Anzahl der Erwerbungen</th></tr>
      </thead>
      <tbody>
        ${data}
      </tbody>
    </table>
  `;
}

function generateTable2() {
  const data = SUBJECT_DATA
    .sort((a, b) => b.count - a.count)
    .map(d => {
      const percentage = ((d.count / TOTAL_BOOKS) * 100).toFixed(1);
      return `<tr><td>${d.signature}</td><td>${d.name}</td><td>${d.count.toLocaleString('de-DE')}</td><td>${percentage}%</td></tr>`;
    })
    .join('');
  return `
    <table class="table table-striped table-hover" data-quarto-disable-processing="true">
      <thead>
        <tr><th>Signatur</th><th>Fachgebiet</th><th>Anzahl</th><th>Anteil</th></tr>
      </thead>
      <tbody>
        ${data}
      </tbody>
    </table>
  `;
}

function generateTable3() {
  const data = collectionData.map(d => {
    const percentage = ((d.count / TOTAL_COLLECTION) * 100).toFixed(1);
    return `<tr><td>${d.name}</td><td>${d.count.toLocaleString('de-DE')}</td><td>${percentage}%</td></tr>`;
  }).join('');
  return `
    <table class="table table-striped table-hover" data-quarto-disable-processing="true">
      <thead>
        <tr><th>Medientyp</th><th>Anzahl</th><th>Anteil</th></tr>
      </thead>
      <tbody>
        ${data}
      </tbody>
    </table>
  `;
}

function initTables() {
  document.querySelector('#details1 .details-content').innerHTML = generateTable1();
  document.querySelector('#details2 .details-content').innerHTML = generateTable2();
  document.querySelector('#details3 .details-content').innerHTML = generateTable3();
}

// Initialisiere alle Diagramme, Statistiken und Tabellen
window.addEventListener('load', function() {
Â  updateAcquisitionStats();
Â  updateSubjectStats();
Â  updateCollectionStats();
Â  initChart1();
Â  initChart2();
Â  initChart3();
  initTables();
});
</script>