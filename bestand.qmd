---
title: "Bestand"
subtitle: "Bestandsanalyse und Fachgebietsverteilung"
author: "Thomas Gerdes"
date: "2025-08-15"
format:
  html:
    toc: true
    toc-float: true
    code-fold: true
    interactive: true
    embed-resources: false
    page-layout: full
    lang: de
    include-in-header:
      - text: |
          <meta name="author" content="Thomas Gerdes">
          <meta name="description" content="Comprehensive collection analysis for MPI library including subject distribution">
          <meta name="keywords" content="library, collection, subjects, statistics, MPI, print books, distribution">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
          <script src="shared/data.js"></script>
          <script src="shared/functions.js"></script>
---

```{=html}
<style>
.quarto-container {
  max-width: 1400px !important;
}
body {
  margin: 0 20px;
}

/* Navigation Styling */
.dashboard-nav {
  background: #f8f9fa;
  padding: 15px;
  border-radius: 8px;
  margin: 20px 0;
  text-align: center;
}

.dashboard-nav a {
  display: inline-block;
  padding: 10px 20px;
  margin: 0 5px;
  background: #007bff;
  color: white;
  text-decoration: none;
  border-radius: 5px;
  transition: background-color 0.2s ease;
}

.dashboard-nav a:hover {
  background: #0056b3;
  color: white;
}

.dashboard-nav a.active {
  background: #28a745;
}

/* Info Box Styling */
.info-box-container {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 10px;
}

.info-box {
  background: #f8f9fa;
  padding: 12px;
  border-radius: 6px;
  text-align: center;
  flex: 1 1 200px;
  min-width: 200px;
  max-width: 250px;
}

@media (max-width: 768px) {
  .info-box {
    flex: 1 1 calc(50% - 5px);
    min-width: calc(50% - 5px);
    max-width: calc(50% - 5px);
  }
}

@media (max-width: 480px) {
  .info-box {
    flex: 1 1 100%;
    min-width: 100%;
    max-width: 100%;
  }
}

.info-box-value {
  font-size: 20px;
  font-weight: bold;
}

.info-box-label {
  font-size: 12px;
  color: #666;
  margin-top: 3px;
}

.info-box.blue { border-left: 3px solid #007bff; }
.info-box.blue .info-box-value { color: #007bff; }
.info-box.gray { border-left: 3px solid #6c757d; }
.info-box.gray .info-box-value { color: #6c757d; }
.info-box.green { border-left: 3px solid #28a745; }
.info-box.green .info-box-value { color: #28a745; }
.info-box.red { border-left: 3px solid #dc3545; }
.info-box.red .info-box-value { color: #dc3545; }

/* Button styling */
.dashboard-button {
  padding: 6px 12px;
  border: none;
  border-radius: 4px;
  color: white;
  cursor: pointer;
  font-size: 12px;
  transition: background-color 0.2s ease;
}

.dashboard-button:hover {
  opacity: 0.9;
}

.dashboard-button:focus {
  outline: 2px solid #000;
  outline-offset: 2px;
}

/* Chart containers */
.chart-container {
  background: white;
  padding: 20px;
  margin: 30px 0;
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}

.chart-title {
  color: #333;
  text-align: center;
  margin: 10px 0 5px 0;
  font-size: 24px;
}
</style>
```

<div style="height: 40px;"></div>

## Bestandsentwicklung (Print-Bücher)

```{=html}
<div class="chart-container">
  <h2 class="chart-title">Bestand 2000-2024</h2>
  
  <div class="info-box-container" style="margin: 15px 0;">
    <div class="info-box blue">
      <div class="info-box-value" id="currentStockPrint" aria-live="polite">-</div>
      <div class="info-box-label">Aktueller Bestand 2024</div>
    </div>
    <div class="info-box blue">
      <div class="info-box-value" id="growthTotalPrint" aria-live="polite">-</div>
      <div class="info-box-label">Gesamtwachstum</div>
    </div>
    <div class="info-box blue">
      <div class="info-box-value" id="avgGrowthPrint" aria-live="polite">-</div>
      <div class="info-box-label">⌀ Wachstum/Jahr</div>
    </div>
  </div>

  <div style="margin: 15px 0; display: flex; gap: 8px; justify-content: center;">
    <button id="lineBtnStock" onclick="changeChartTypeStock('line')" 
            aria-label="Wechsel zu Liniendiagramm für Bestandsentwicklung"
            class="dashboard-button" 
            style="background: #28a745;">Liniendiagramm</button>
    <button id="barBtnStock" onclick="changeChartTypeStock('bar')" 
            aria-label="Wechsel zu Balkendiagramm für Bestandsentwicklung"
            class="dashboard-button" 
            style="background: #007bff;">Balkendiagramm</button>
    <button onclick="downloadChartStock()" 
            aria-label="Diagramm der Bestandsentwicklung als PNG-Datei herunterladen"
            class="dashboard-button" 
            style="background: #28a745;">PNG Download</button>
  </div>

  <div style="position: relative; height: 600px; margin: 10px 0;">
    <canvas id="stockChart" role="img" aria-label="Diagramm der Bestandsentwicklung Print-Bücher von 2000 bis 2024"></canvas>
  </div>
</div>

<details id="detailsStock">
<summary>📊 Detaildaten zur Bestandsentwicklung (Print)</summary>
<div class="details-content">
</div>
</details>
```

<div style="height: 40px;"></div>

---

## Bestandsverteilung nach Fachgebieten (Print-Bücher)

```{=html}
<div class="chart-container">
  <h2 class="chart-title">Bestand 2025</h2>
  
  <div style="display: flex; justify-content: center; margin: 15px 0;">
    <div class="info-box blue" style="flex: none;">
      <div class="info-box-value" id="totalBooks" aria-live="polite">-</div>
      <div class="info-box-label">Print-Bücher (gesamt)</div>
    </div>
  </div>

  <div style="margin: 15px 0; display: flex; gap: 8px; justify-content: center;">
    <button id="pieBtn2" onclick="changeChartType2('pie')" 
            aria-label="Wechsel zu Kreisdiagramm für Bestandsverteilung"
            class="dashboard-button" 
            style="background: #28a745;">Kreisdiagramm</button>
    <button id="barBtn2" onclick="changeChartType2('bar')" 
            aria-label="Wechsel zu Balkendiagramm für Bestandsverteilung"
            class="dashboard-button" 
            style="background: #007bff;">Balkendiagramm</button>
    <button onclick="downloadChart2()" 
            aria-label="Diagramm der Bestandsverteilung als PNG-Datei herunterladen"
            class="dashboard-button" 
            style="background: #28a745;">PNG Download</button>
  </div>

  <div style="position: relative; height: 700px; margin: 10px 0;">
    <canvas id="subjectChart" role="img" aria-label="Diagramm der Bestandsverteilung nach Fachgebieten"></canvas>
  </div>
</div>

<details id="details2">
<summary>📋 Detaillierte Bestandsaufschlüsselung (Print)</summary>
<div class="details-content">
</div>
</details>
```
<div style="height: 40px;"></div>

---

## Bestandsverteilung nach Fachgebieten (Ebooks)

Die Bestandsverteilung für Ebooks ist aus den Daten nicht direkt ableitbar, da sie keine fachgebietsbezogenen Signaturen haben. Die Erwerbungshistorie legt jedoch nahe, dass die Aufteilung hier thematisch annähernd der des Printbestands entspricht, d.h. einen deutlichen Schwerpunkt im Bereich Sozial- und Kulturanthropologie hat.

---

<div style="height: 40px;"></div>

---

## Gesamtbestand

```{=html}
<div class="chart-container">
  <h2 class="chart-title">Gesamtbestand 2025</h2>
  <p style="text-align: center; color: #666; margin: 0 0 20px 0; font-size: 14px;">Aufteilung nach Medientypen</p>
  
  <div style="display: flex; justify-content: center; margin: 15px 0;">
    <div class="info-box blue" style="flex: none;">
      <div class="info-box-value" id="totalCollection" aria-live="polite">-</div>
      <div class="info-box-label">Gesamtbestand</div>
    </div>
  </div>

  <div style="margin: 15px 0; display: flex; gap: 8px; justify-content: center;">
    <button id="pieBtn3" onclick="changeChartType3('pie')" 
            aria-label="Wechsel zu Kreisdiagramm für Gesamtbestand"
            class="dashboard-button" 
            style="background: #28a745;">Kreisdiagramm</button>
    <button id="barBtn3" onclick="changeChartType3('bar')" 
            aria-label="Wechsel zu Balkendiagramm für Gesamtbestand"
            class="dashboard-button" 
            style="background: #007bff;">Balkendiagramm</button>
    <button onclick="downloadChart3()" 
            aria-label="Diagramm des Gesamtbestands als PNG-Datei herunterladen"
            class="dashboard-button" 
            style="background: #28a745;">PNG Download</button>
  </div>

  <div style="position: relative; height: 500px; margin: 10px 0;">
    <canvas id="totalCollectionChart" role="img" aria-label="Diagramm des Gesamtbestands nach Medientypen"></canvas>
  </div>
</div>

<details id="details3">
<summary>📊 Detaillierte Bestandsaufschlüsselung</summary>
<div class="details-content">
</div>
</details>

<div style="height: 80px;"></div>

<script>
/*
MPI Library Dashboard - Collection Page
Author: Thomas Gerdes | License: MIT
Comprehensive collection analysis and subject distribution
Version: 2.0.0 | Last updated: August 2025
*/

// Chart instances
let chartStock, chart2, chart3;
let currentChartTypeStock = 'line';
let currentChartType2 = 'pie';
let currentChartType3 = 'pie';

// ===== STOCK DEVELOPMENT CHART =====
function initChartStock(type = 'line') {
  const ctx = document.getElementById('stockChart').getContext('2d');
  
  if (chartStock) { 
    chartStock.destroy(); 
  }

  currentChartTypeStock = type;
  updateActiveButtons(type, 'lineBtnStock', 'barBtnStock');

  const config = getStandardChartConfig(type, {
    labels: STOCK_DATA.map(d => d.year),
    datasets: [
      {
        label: 'Print-Bücher Bestand',
        data: STOCK_DATA.map(d => d.value),
        borderColor: '#007bff',
        backgroundColor: type === 'bar' ? '#007bff' : '#007bff20',
        borderWidth: 3,
        pointRadius: type === 'line' ? 4 : 0,
        fill: type === 'line'
      }
    ]
  }, {
    scales: {
      y: { 
        title: { display: true, text: 'Bestand (Anzahl Bücher)', font: { size: 12 } }
      }
    }
  });
  
  chartStock = new Chart(ctx, config);
  announceToScreenReader(`Bestandsentwicklungsdiagramm als ${type === 'line' ? 'Liniendiagramm' : 'Balkendiagramm'} geladen`);
}

function changeChartTypeStock(type) { 
  initChartStock(type); 
}

function downloadChartStock() {
  downloadChart(chartStock, 'bestandsentwicklung_2000-2024.png', 'Bestandsentwicklungsdiagramm');
}

// ===== SUBJECT DISTRIBUTION CHART =====
function initChart2(type = 'pie') {
  const ctx = document.getElementById('subjectChart').getContext('2d');
  
  if (chart2) { 
    chart2.destroy(); 
  }

  currentChartType2 = type;
  updateActiveButtons(type, null, 'barBtn2', 'pieBtn2');

  const sortedData = [...SUBJECT_DATA].sort((a, b) => b.count - a.count);
  const colors = generateColors(sortedData.length);

  const config = getStandardChartConfig(type, {
    labels: sortedData.map(d => `${d.signature} - ${d.name}`),
    datasets: [{
      label: 'Anzahl Bücher',
      data: sortedData.map(d => d.count),
      backgroundColor: colors,
      borderColor: colors.map(color => color.replace('80', '').replace('40', '')),
      borderWidth: 1
    }]
  }, {
    layout: { padding: { bottom: type === 'bar' ? 60 : 20, left: 10, right: 10, top: 10 } },
    plugins: {
      legend: {
        display: type === 'pie',
        position: 'bottom',
        labels: { boxWidth: 12, padding: 8, font: { size: 9 }, usePointStyle: true }
      },
      tooltip: {
        callbacks: {
          title: context => null,
          label: context => {
            const count = type === 'bar' ? context.parsed.y : context.parsed;
            const percentage = ((count / TOTAL_BOOKS) * 100).toFixed(1);
            const item = sortedData[context.dataIndex];
            return `${item.signature} - ${item.name}: ${formatNumber(count)} (${percentage}%)`;
          }
        }
      }
    },
    scales: type === 'bar' ? {
      x: {
        title: { display: true, text: 'Signaturgruppe', font: { size: 12 } },
        ticks: {
          maxRotation: 45,
          minRotation: 45,
          font: { size: 8 },
          callback: (value, index) => {
            const item = sortedData[index];
            if (item) { 
              const label = `${item.signature} - ${item.name}`; 
              return label.length > 25 ? label.substr(0, 22) + '...' : label; 
            }
            return value;
          }
        }
      },
      y: { 
        title: { display: true, text: 'Anzahl Bücher', font: { size: 12 } }, 
        beginAtZero: true, 
        ticks: { font: { size: 10 } } 
      }
    } : {}
  });
  
  chart2 = new Chart(ctx, config);
  announceToScreenReader(`Bestandsdiagramm als ${type === 'pie' ? 'Kreisdiagramm' : 'Balkendiagramm'} geladen`);
}

function changeChartType2(type) { 
  initChart2(type); 
}

function downloadChart2() {
  downloadChart(chart2, 'bestand_sachgruppen_2025.png', 'Bestandsdiagramm');
}

// ===== TOTAL COLLECTION CHART =====
const collectionColors = ['#007bff', '#28a745', '#17a2b8'];
const collectionData = [
  { name: 'Print-Bücher', count: TOTAL_BOOKS }, 
  { name: 'Ebooks', count: TOTAL_EBOOKS },
  ...OTHER_MEDIA_DATA
];

function initChart3(type = 'pie') {
  const ctx = document.getElementById('totalCollectionChart').getContext('2d');
  
  if (chart3) { 
    chart3.destroy(); 
  }

  currentChartType3 = type;
  updateActiveButtons(type, null, 'barBtn3', 'pieBtn3');

  // Sort data by size for bar charts only
  const dataToUse = type === 'bar' ? 
    [...collectionData].sort((a, b) => b.count - a.count) : 
    collectionData;

  const config = getStandardChartConfig(type, {
    labels: dataToUse.map(d => d.name),
    datasets: [{
      label: 'Anzahl Medien',
      data: dataToUse.map(d => d.count),
      backgroundColor: collectionColors,
      borderColor: collectionColors,
      borderWidth: 1
    }]
  }, {
    layout: { padding: { bottom: type === 'bar' ? 40 : 20, left: 10, right: 10, top: 10 } },
    plugins: {
      legend: {
        display: type === 'pie',
        position: 'bottom',
        labels: { boxWidth: 15, padding: 15, font: { size: 12 }, usePointStyle: true }
      },
      tooltip: {
        callbacks: {
          title: context => null,
          label: context => {
            const count = type === 'bar' ? context.parsed.y : context.parsed;
            const percentage = ((count / TOTAL_COLLECTION) * 100).toFixed(1);
            const item = dataToUse[context.dataIndex];
            return `${item.name}: ${formatNumber(count)} (${percentage}%)`;
          }
        }
      }
    },
    scales: type === 'bar' ? {
      x: { 
        title: { display: true, text: 'Medientyp', font: { size: 12 } }, 
        ticks: { font: { size: 11 } } 
      },
      y: { 
        title: { display: true, text: 'Anzahl Medien', font: { size: 12 } }, 
        beginAtZero: true, 
        ticks: { font: { size: 10 } } 
      }
    } : {}
  });
  
  chart3 = new Chart(ctx, config);
  announceToScreenReader(`Gesamtbestandsdiagramm als ${type === 'pie' ? 'Kreisdiagramm' : 'Balkendiagramm'} geladen`);
}

function changeChartType3(type) { 
  initChart3(type); 
}

function downloadChart3() {
  downloadChart(chart3, 'gesamtbestand_2025.png', 'Gesamtbestandsdiagramm');
}

// ===== UPDATE STATISTICS =====
function updateStockStats() {
  document.getElementById('currentStockPrint').textContent = formatNumber(CURRENT_STOCK);
  document.getElementById('growthTotalPrint').textContent = formatNumber(TOTAL_GROWTH);
  document.getElementById('avgGrowthPrint').textContent = formatNumber(AVG_GROWTH_PER_YEAR);
}

function updateSubjectStats() {
  document.getElementById('totalBooks').textContent = formatNumber(TOTAL_BOOKS);
}

function updateCollectionStats() {
  document.getElementById('totalCollection').textContent = formatNumber(TOTAL_COLLECTION);
}

// ===== GENERATE TABLES =====
function generateTableStock() {
  const columns = [
    { field: 'year', title: 'Jahr' },
    { field: 'value', title: 'Bestand Print-Bücher', formatter: formatNumber }
  ];
  return generateTable(STOCK_DATA, columns, {
    className: 'table table-striped table-hover',
    ariaLabel: 'Detaildaten der Bestandsentwicklung nach Jahren'
  });
}

function generateTable2() {
  const columns = [
    { field: 'signature', title: 'Signatur' },
    { field: 'name', title: 'Fachgebiet' },
    { field: 'count', title: 'Anzahl', formatter: formatNumber },
    { 
      field: 'count', 
      title: 'Anteil', 
      formatter: (value) => ((value / TOTAL_BOOKS) * 100).toFixed(1) + '%'
    }
  ];
  return generateTable(SUBJECT_DATA, columns, {
    sortBy: 'count',
    sortDesc: true,
    className: 'table table-striped table-hover',
    ariaLabel: 'Detaillierte Bestandsaufschlüsselung nach Fachgebieten'
  });
}

function generateTable3() {
  const columns = [
    { field: 'name', title: 'Medientyp' },
    { field: 'count', title: 'Anzahl', formatter: formatNumber },
    { 
      field: 'count', 
      title: 'Anteil', 
      formatter: (value) => ((value / TOTAL_COLLECTION) * 100).toFixed(1) + '%'
    }
  ];
  return generateTable(collectionData, columns, {
    className: 'table table-striped table-hover',
    ariaLabel: 'Gesamtbestand nach Medientypen'
  });
}

function initTables() {
  try {
    document.querySelector('#detailsStock .details-content').innerHTML = generateTableStock();
    document.querySelector('#details2 .details-content').innerHTML = generateTable2();
    document.querySelector('#details3 .details-content').innerHTML = generateTable3();
    console.log('📋 Collection tables initialized successfully');
  } catch (error) {
    console.error('Error initializing collection tables:', error);
  }
}

// ===== INITIALIZATION =====
function initializeCollection() {
  try {
    console.log('🚀 Initializing Collection Dashboard...');
    
    // Update all statistics
    updateStockStats();
    updateSubjectStats();
    updateCollectionStats();
    
    // Initialize all charts
    initChartStock();
    initChart2();
    initChart3();
    
    // Initialize tables
    initTables();
    
    // Initialize common functionality
    initDashboard([chartStock, chart2, chart3]);
    
    console.log('✅ Collection initialization complete');
    
  } catch (error) {
    console.error('❌ Collection initialization failed:', error);
    announceToScreenReader('Fehler beim Laden der Bestandsanalyse');
  }
}

// Initialize when DOM is ready
if (document.readyState === 'loading') {
  document.addEventListener('DOMContentLoaded', initializeCollection);
} else {
  initializeCollection();
}

// Fallback initialization
window.addEventListener('load', function() {
  if (!chartStock || !chart2 || !chart3) {
    console.log('🔄 Re-initializing collection charts...');
    initializeCollection();
  }
});
</script>
```